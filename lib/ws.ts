// lib/ws.ts

import { useAppStore } from './store'

let socket: WebSocket | null = null

// ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø—Ä–∏—ë–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
export const connectWebSocket = () => {
  if (socket) return

  socket = new WebSocket('ws://62.72.23.250:8383/ws')

  socket.onopen = () => {
    console.log('‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á—ë–Ω')
  }

  socket.onmessage = (message) => {
    try {
      const data = JSON.parse(message.data)
      const { latitude, longitude } = data

      if (latitude && longitude) {
        useAppStore.getState().setLocation(latitude, longitude)
        useAppStore.getState().addRoutePoint(latitude, longitude)
      }
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ WebSocket:', err)
    }
  }

  socket.onerror = (err) => {
    console.error('‚ùå WebSocket –æ—à–∏–±–∫–∞:', err)
  }

  socket.onclose = () => {
    console.log('üîå WebSocket –æ—Ç–∫–ª—é—á—ë–Ω')
    socket = null
  }
}

// üîº –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
export const sendCoordsToServer = (lat: number, lng: number) => {
  if (!socket || socket.readyState !== WebSocket.OPEN) {
    console.warn('‚ö†Ô∏è WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á—ë–Ω')
    return
  }

  const payload = JSON.stringify({ latitude: lat, longitude: lng })
  socket.send(payload)
  console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:', payload)
}
